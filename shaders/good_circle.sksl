uniform float2 iResolution;
uniform float iTime;



half4 main(float2 fragCoord) {
	float2 uv = fragCoord.xy / iResolution.xy;
	float2 center = float2(0.5, 0.5); // Center of the screen
	float circleRadius = 0.4; // Radius of the circular path

	// Initialize the color to black
	half4 color = half4(0.0);

	// Number of sparks
	const int numSparks = 100;

	float time = iTime;


	  
	// Loop to create multiple sparks along the circular path
	for (int i = 0; i < numSparks; i++) {
		float radius = 0.2 * fract(sin(float(i) * 78.233 + time) * 43758.5453);
		// Adjust radius to avoid empty circle
		radius *= fract(sin(float(i) * 93.233 + time) * 42758.5453);
		// Calculate angle for each spark along the circle
		float angle = 6.28318530718 * float(i) / float(numSparks);
		float2 tmpCenter = center;
		//tmpCenter += float2(radius, radius);
		float2 sparkPos = tmpCenter + circleRadius * float2(cos(angle + time),  sin(angle + time));


		  
		// Calculate the intensity of the spark
		float sparkIntensity = smoothstep(0.0001, 0.08, 0.05 - distance(uv, sparkPos));
		//float sparkIntensity = smoothstep(0.0011, 0.005, 0.005 - distance(uv, sparkPos));

		// Generate random color for the spark with rainbow effect
		float hue = fract(float(i) / float(numSparks) + time );
		half3 rgb = half3(0.7 + 0.5 * cos(6.245646 * hue + float3(0.0, 2.0, 4.0)));

		// Add the spark color
		color += half4(rgb, 1.0) * sparkIntensity;
	}

	return color;
}